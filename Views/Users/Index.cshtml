@using BuggerOff.DataAccess;
@using BuggerOff.ViewModels;
@using PagedList;
@using PagedList.Mvc;


@model IPagedList<UserViewModelItem>

@{
    ViewBag.Title = "Index";
}

<style>
    .redfill { fill: red;}
</style>

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            Username
        </th>
        <th>
            Email
        </th>
        <th>
            Role
        </th>
        <th>
            Tickets
        </th>
        <th class="col-md-3">

        </th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @item.userName
        </td>
        <td>
            @item.email
        </td>
        <td>
            @item.roles.FirstOrDefault()
        </td>
        <td>
            <a href="@Url.Action("../Tickets/Index", new { Search = item.userName, ascending = ViewBag.ascending, searchBy = "AssignedTo" })">@item.numTickets</a>
        </td>
        <td class="col-md-3">
            <div class="input-group-btn">
                @if (User.IsInRole("Administrator")) { 
                <a href="@Url.Action("Edit", "Users", new { id = item.userId })" class="btn btn-success">
                    <i class="glyphicon glyphicon-edit"></i> Edit
                </a>
                }
                <a href="@Url.Action( "Details", new { id = item.userId })" class="btn btn-success">
                    <i class="glyphicon glyphicon-plus-sign"></i> Details
                </a>
                @if(User.IsInRole("Administrator")) { 
                <a href="@Url.Action("Delete", new { id = item.userId })" class="btn btn-danger">
                    <i class="icon-flash-off"></i> Delete
                </a>
                }
            </div>
        </td>
    </tr>
}

</table>
