@using BuggerOff.ViewModels;
@using BuggerOff.DataAccess;

@model IEnumerable<TicketViewModelShort>

@{
    ViewBag.Title = "Index";
}

@using PagedList.Mvc
@using PagedList
@using System.Web.Mvc

<div class="table-header">

    <a class="btn btn-white btn-info" href="@Url.Action("Create", "Tickets")">
        <i class="fa fa-plus-square"></i>
        <span style="">
            New Ticket
        </span>
    </a>
</div>
<div class="dataTables_wrapper table-responsive no-footer">
    <table class="table table-striped table-bordered table-hover table-responsive dataTable no-footer" id="ticketTable">
        <thead>
            <tr>
                <th>
                    Status
                </th>
                <th>
                    Project
                </th>
                <th>
                    Title
                </th>
                <th>
                    Priority
                </th>
                <th>
                    Created
                </th>

                <th>
                    Created By
                </th>
                <th>
                    Assigned To
                </th>

                <th>
                    Completed
                </th>
                <th>

                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {

            var db = new BuggerOffEntities();

            <tr>
                <td>
                    @db.TicketStatuses.Find(item.StatusId).Status
                </td>
                <td>
                    @(item.ProjectId == null ? "" : db.Projects.Find(item.ProjectId).Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @db.TicketPriorities.Find(item.PriorityId).Priority
                </td>
                <td>
                    @item.Created.ToLocalTime().DateTime.Date
                </td>

                <td>
                    @db.AspNetUsers.Find(item.CreatedBy).UserName
                </td>
                <td>
                    @(item.AssignedToUserId == null ? "" : db.AspNetUsers.Find(item.AssignedToUserId).UserName)
                </td>

                <td>
                    @if (item.isCompleted == true)
                    {
                    <i class="fa fa-check"></i>
                    }
                </td>


                <td style="text-align:center;">
                        <a href="@Url.Action("Edit", new { id = item.id })" class="btn btn-sm btn-success">
                            <i class="glyphicon glyphicon-edit"></i> Edit
                        </a>

                        <a href="@Url.Action("Details", new { id = item.id })" class="btn btn-sm btn-success">
                            <i class="glyphicon glyphicon-plus-sign"></i> Details
                        </a>
                        @if (User.IsInRole("Administrator"))
                        {
                            <a href="@Url.Action("Delete", new { id = item.id })" class="btn btn-sm btn-danger">
                                <i class="icon-flash-off"></i> Delete
                            </a>
                        }
                </td>
            </tr>
            }
        </tbody>
    </table>
</div>






<script>
    $(document).ready(function () {
        $('#ticketTable').DataTable();
    });
</script>